# Generated by Django 4.2.11 on 2025-10-15 04:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('persistence', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('course_code', models.CharField(max_length=20, unique=True)),
                ('course_name', models.CharField(max_length=200)),
                ('credits', models.IntegerField()),
                ('cycle', models.IntegerField()),
                ('course_type', models.CharField(choices=[('TEORIA', 'Teoría'), ('PRACTICA', 'Práctica')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'courses',
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('evaluation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('evaluation_type', models.CharField(choices=[('CONTINUA', 'Evaluación Continua'), ('EXAMEN', 'Examen')], max_length=20)),
                ('unit', models.IntegerField()),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='persistence.course')),
            ],
            options={
                'db_table': 'evaluations',
            },
        ),
        migrations.CreateModel(
            name='LabAssignment',
            fields=[
                ('assignment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assignment_method', models.CharField(choices=[('AUTOMATIC', 'Automático'), ('LOTTERY', 'Sorteo')], max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'lab_assignments',
            },
        ),
        migrations.CreateModel(
            name='LabEnrollmentCampaign',
            fields=[
                ('campaign_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_closed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_campaigns', to='persistence.course')),
            ],
            options={
                'db_table': 'lab_enrollment_campaigns',
            },
        ),
        migrations.CreateModel(
            name='LaboratoryGroup',
            fields=[
                ('lab_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lab_nomenclature', models.CharField(max_length=5)),
                ('capacity', models.IntegerField()),
                ('day_of_week', models.CharField(max_length=20)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laboratories', to='persistence.course')),
                ('professor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='labs_taught', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'laboratory_groups',
                'unique_together': {('course', 'lab_nomenclature')},
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semester_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'semesters',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='SubstitutoryExamEnrollment',
            fields=[
                ('exam_enrollment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unit_to_replace', models.IntegerField()),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutory_exams', to='persistence.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substitutory_exams', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'substitutory_exam_enrollments',
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('syllabus_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('loaded_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='syllabus', to='persistence.course')),
            ],
            options={
                'db_table': 'syllabuses',
            },
        ),
        migrations.CreateModel(
            name='SyllabusSession',
            fields=[
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_number', models.IntegerField()),
                ('topic', models.TextField()),
                ('planned_date', models.DateField()),
                ('real_date', models.DateField(blank=True, null=True)),
                ('observations', models.TextField(blank=True)),
                ('syllabus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='persistence.syllabus')),
            ],
            options={
                'db_table': 'syllabus_sessions',
                'ordering': ['session_number'],
            },
        ),
        migrations.CreateModel(
            name='SubstitutoryGradeRecord',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.DecimalField(decimal_places=2, max_digits=4)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('exam_enrollment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='grade_record', to='persistence.substitutoryexamenrollment')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='substitutory_grades_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'substitutory_grade_records',
            },
        ),
        migrations.CreateModel(
            name='StudentPostulation',
            fields=[
                ('postulation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('ASIGNADO', 'Asignado'), ('NO_ASIGNADO', 'No Asignado')], default='PENDIENTE', max_length=20)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postulations', to='persistence.labenrollmentcampaign')),
                ('lab_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postulations', to='persistence.laboratorygroup')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_postulations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_postulations',
                'unique_together': {('campaign', 'student')},
            },
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('enrollment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('ACTIVO', 'Activo'), ('RETIRADO', 'Retirado'), ('COMPLETADO', 'Completado')], default='ACTIVO', max_length=20)),
                ('current_attendance_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('final_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='persistence.course')),
                ('lab_assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enrollment', to='persistence.labassignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'student_enrollments',
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.AddField(
            model_name='labassignment',
            name='lab_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='persistence.laboratorygroup'),
        ),
        migrations.AddField(
            model_name='labassignment',
            name='postulation',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='persistence.studentpostulation'),
        ),
        migrations.AddField(
            model_name='labassignment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_assignments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='persistence.semester'),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('log_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='labassignment',
            unique_together={('student', 'lab_group')},
        ),
        migrations.CreateModel(
            name='GradeRecord',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('raw_score', models.DecimalField(decimal_places=2, max_digits=4)),
                ('rounded_score', models.DecimalField(decimal_places=2, max_digits=4)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_records', to='persistence.studentenrollment')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_records', to='persistence.evaluation')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grade_records_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'grade_records',
                'unique_together': {('enrollment', 'evaluation')},
            },
        ),
        migrations.CreateModel(
            name='CourseGroup',
            fields=[
                ('group_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('group_code', models.CharField(max_length=20)),
                ('capacity', models.IntegerField()),
                ('day_of_week', models.CharField(max_length=20)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='persistence.course')),
                ('professor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groups_taught', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_groups',
                'unique_together': {('course', 'group_code')},
            },
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_number', models.IntegerField()),
                ('session_date', models.DateField()),
                ('status', models.CharField(choices=[('P', 'Presente'), ('F', 'Falta'), ('J', 'Falta Justificada')], max_length=1)),
                ('justification', models.TextField(blank=True)),
                ('professor_ip', models.GenericIPAddressField()),
                ('geo_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('geo_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='persistence.studentenrollment')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_records_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'attendance_records',
                'unique_together': {('enrollment', 'session_number')},
            },
        ),
    ]
